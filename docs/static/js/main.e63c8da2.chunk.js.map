{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","infoGifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","setData","useEffect","then","useFetchGifs","image","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAkCeA,EA/BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAezC,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,QAAU,IAC9BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,YAAY,gCACZC,MAAOV,EACPW,SAlBmB,SAACR,GACxBF,EAAcE,EAAES,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACN,mCACTC,EAFe,kDAEkCC,UACrDH,GAHmB,6BACN,oCADM,SAMEI,MAAMF,GANR,cAMfG,EANe,gBAOEA,EAASC,OAPX,uBAObC,EAPa,EAObA,KACFC,EAAWD,EAAKE,KAAI,SAACC,GAAS,IAAD,EACjC,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZjB,kBAedM,GAfc,4CAAH,sDCWLO,EATK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC5B,OACE,sBAAKc,UAAU,OAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCkBKO,EAnBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFN,SAACA,GAAc,IAAD,EAChBf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAH6B,mBACjCb,EADiC,KAC3Bc,EAD2B,KAgBxC,OATAC,qBAAU,WACRvB,EAAQC,GAAUuB,MAAK,SAACV,GACtBQ,EAAQ,CACNd,KAAMM,EACNO,SAAS,SAGZ,CAACpB,IAEGO,EDbmBiB,CAAaxB,GAA/BO,EADwB,EACxBA,KAAMa,EADkB,EAClBA,QACd,OACE,sBAAKJ,UAAU,wCAAf,UACE,6BAAKhB,IACJoB,GAAW,4CACZ,qBAAKJ,UAAU,OAAf,SACGT,EAAKE,KAAI,SAACgB,GAAD,OACR,cAAC,EAAD,eAAgCA,GAAdA,EAAMd,aEQnBe,EAjBM,WAAO,IAAD,EACWzC,mBAAS,CAAC,aADrB,mBAClBQ,EADkB,KACNT,EADM,KAGzB,OACE,qCACE,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,qBAAKgC,UAAU,YAAf,SACGvB,EAAWgB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCPxB2B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.e63c8da2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputValue = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length >= 3) {\r\n      setCategories((categories) => [inputValue, ...categories]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Escribe para buscar un gif...\"\r\n        value={inputValue}\r\n        onChange={handleInputValue}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n  const apiKey = \"Sou2lp8iOyAr7OaT6EhJv51CQCq1ka59\";\r\n  const url = `https://api.giphy.com/v1/gifs/search?&q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=${apiKey}`;\r\n\r\n  const response = await fetch(url);\r\n  const { data } = await response.json();\r\n  const infoGifs = data.map((gif) => {\r\n    return {\r\n      id: gif.id,\r\n      title: gif.title,\r\n      url: gif.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  return infoGifs;\r\n};\r\n","import React from \"react\";\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={url} alt={title}></img>\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data, loading } = useFetchGifs(category);\r\n  return (\r\n    <div className=\"animate__animated animate__fadeInDown\">\r\n      <h3>{category}</h3>\r\n      {loading && <p>Cargando...</p>}\r\n      <div className=\"grid\">\r\n        {data.map((image) => (\r\n          <GifGridItem key={image.id} {...image} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nGifGrid.propTypes = {\r\n  category: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  // A quien pertenece este useEffect?\r\n  useEffect(() => {\r\n    getGifs(category).then((images) => {\r\n      setData({\r\n        data: images,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return data; //{ data: [], loading: true}\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"Konosuba\"]);\r\n\r\n  return (\r\n    <>\r\n      <h2>Gif Expert App</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <div className=\"dashboard\">\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\n\n// console.log(GifExpertApp());\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}